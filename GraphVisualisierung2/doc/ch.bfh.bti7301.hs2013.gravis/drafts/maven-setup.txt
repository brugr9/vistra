== Setup Maven Project ==
* Neues Projekt auf github erstellt: gravis
* git clone:
<code>
 gecko@T:~/git$ git clone https://github.com/brugr9/gravis.git BTI7301
 Cloning into 'BTI7301'...
 remote: Counting objects: 63, done.
 remote: Compressing objects: 100% (31/31), done.
 remote: Total 63 (delta 15), reused 47 (delta 5)
 Unpacking objects: 100% (63/63), done.
 gecko@T:~/git$ cd BTI7301
</code>

== Setup Maven Project ==
* Anpassen der Datei <userdir>/.m2/settings.xml (see: http://stackoverflow.com/questions/5392416/m2eclipse-cannot-update-index-from-central-repo):

<code>
        <mirror>
          <id>ibiblio.org</id>
          <url>http://mirrors.ibiblio.org/maven2</url>
          <mirrorOf>central</mirrorOf>
        </mirror>
</code>

* Maven Projekt erstellen (see: http://maven.apache.org/guides/getting-started/maven-in-five-minutes.html):
<code>
 gecko@T:~/git$ cd BTI7301
 gecko@T:~/git/BTI7301$ mvn archetype:generate -DgroupId=ch.bfh.bti7301.hs2013.gravis -DartifactId=GraphVisualisierung2 -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false
</code>

ergibt:
<code>
 gecko@T:~/git/BTI7301$ tree GraphVisualisierung2/
 GraphVisualisierung2/
 ├── pom.xml
 └── src
     ├── main
     │   └── java
     │       └── ch
     │           └── bfh
     │               └── bti7301
     │                   └── hs2013
     │                       └── gravis
     │                           └── App.java
     └── test
         └── java
             └── ch
                 └── bfh
                     └── bti7301
                         └── hs2013
                             └── gravis
                                 └── AppTest.java
 
 15 directories, 3 files
</code>

* in den Projektordner wechseln 
<code>
 gecko@T:~/git/BTI7301$ cd GraphVisualisierung2/
</code>

* pom.xml anpassen:

** url:
<code>
  <name>GraphVisualisierung2</name>
  <url>https://github.com/brugr9/gravis</url>
</code>

** junit:

*** first get junit version by console: 
<code>
 $ java -cp /usr/share/java/junit4.jar junit.runner.Version
</code>

*** then configure pom.xml (see: http://maven.apache.org/surefire/maven-surefire-plugin/examples/junit.html):
<code>
 [...]
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
 [...]
</code>

* Eclipse Projekt ersetllen (see: http://maven.apache.org/guides/getting-started/maven-in-five-minutes.html):
<code>
 gecko@T:~/git/BTI7301/GraphVisualisierung2$ mvn eclipse:eclipse
</code>

* Eclipse Projekt anpassen (see: http://blog.teamextension.com/m2eclipse-m2e-support-for-maven-eclipse-plugin-projects-497):
** Datei .project:
<code>
 <?xml version="1.0" encoding="UTF-8"?>
 <projectDescription>
  <name>GraphVisualisierung2</name>
  <!--
  <comment>NO_M2ECLIPSE_SUPPORT: Project files created with the maven-eclipse-plugin are not supported in M2Eclipse.</comment>
  -->
  <comment></comment>
  <projects/>
  <buildSpec>
    <buildCommand>
      <!--
      <name>org.eclipse.jdt.core.javabuilder</name>
      -->
      <name>org.eclipse.m2e.core.maven2Builder</name>
    </buildCommand>
  </buildSpec>
  <natures>
    <!--
    <nature>org.eclipse.jdt.core.javanature</nature>
    -->
    <nature>org.eclipse.m2e.core.maven2Nature</nature>
  </natures>
 </projectDescription>
</code>

** Datei .classpath ('rename all path of the M2_REPO libraries in the with the M2Eclipse classpath container'):
<code>
 [...]
  <!--
  <classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/> 
  -->
  <classpathentry kind="con" path="org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER"/>
 [...]
</code>


* Build ausprobieren:
<code>
 gecko@T:~/git/BTI7301/GraphVisualisierung2$ mvn package
 [...]
 gecko@T:~/git/BTI7301/GraphVisualisierung2$ java -cp target/GraphVisualisierung2-1.0-SNAPSHOT.jar ch.bfh.bti7301.hs2013.gravis.App
 Hello World!
</code>

* Ordner für Resourcen erstellen, see
** http://maven.apache.org/guides/getting-started/index.html
** http://maven.apache.org/guides/introduction/introduction-to-the-standard-directory-layout.html
<code>
 gecko@T:~/git/BTI7301/GraphVisualisierung2$ mkdir -p src/main/resources/META-INF
 gecko@T:~/git/BTI7301/GraphVisualisierung2$ touch src/main/resources/META-INF/application.properties
 gecko@T:~/git/BTI7301/GraphVisualisierung2$ mkdir src/test/resources
 gecko@T:~/git/BTI7301/GraphVisualisierung2$ touch src/test/resources/test.properties
</code>

* Site erstellen
<code>
 mvn site
</code>
siehe <path to project>/GraphVisualisierung2/target/site/index.html

* Eclipse IDE
- starten
- perspective: git. -> add existing local repo
- perspective: java. -> import ... > Projects from Git > local > select etc.

(see: http://stackoverflow.com/questions/10564684/how-to-fix-error-updating-maven-project-unsupported-iclasspathentry-kind-4)
- bin ordner wieder löschen

* libraries installieren:
http://mvnrepository.com/artifact/net.sf.jung
http://mvnrepository.com/artifact/commons-io/commons-io/2.4



* Bisherige Klassen etc. in das Maven-Projekt kopieren.


* Applikation-Tests anpassen (see: http://www.mkyong.com/maven/how-to-create-a-java-project-with-maven/)
<code>
 mvn test
</code>

* git commit and push

* todo after git clone:
- edit .classpath
- untrack .classpath




